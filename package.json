{
    "name": "ipython",
    "displayName": "ipython",
    "description": "IPython integration supporting direct interactive usage and commands.",
    "icon": "md_img/icon.png",
    "version": "2023.9.0",
    "publisher": "HoangKimLai",
    "repository": {
        "type": "git",
        "url": "https://github.com/hoangKnLai/vscode-ipython"
    },
    "engines": {
        "vscode": "^1.81.0"
    },
    "keywords": [
        "python",
        "IPython"
    ],
    "categories": [
        "Programming Languages",
        "Other",
        "Data Science",
        "Notebooks"
    ],
    "extensionDependencies": [
        "ms-python.python"
    ],
    "activationEvents": [
        "onLanguage:python"
    ],
    "main": "./out/extension.js",
    "capabilities": {
        "virtualWorkspaces": true
    },
    "contributes": {
        "configuration": {
            "title": "IPython",
            "properties": {
                "ipython.workFolderBase": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "A folder to be used by this extension. \nDefault: `${HOME}`. NOTE: it creates a temporary `${workFolderBase}/.vscode/ipython/`"
                },
                "ipython.LaunchArguments": {
                    "type": "string",
                    "default": "--no-autoindent",
                    "markdownDescription": "Input command to `ipython` call on launch (e.g. `--matplotlib=qt5`). Strongly recommend using `--no-autoindent` for proper code loading to IPython."
                },
                "ipython.StartupCommands": {
                    "type": "array",
                    "default": [
                        "%load_ext autoreload",
                        "%autoreload 2"
                    ],
                    "markdownDescription": "List of commands to execute line-by-line after launching IPython terminal (e.g., `['%load_ext autoreload', '%autoreload 2']`)."
                },
                "ipython.SectionTag": {
                    "type": "string",
                    "default": "# %%",
                    "markdownDescription": "Tag indicating a section block"
                },
                "ipython.ExecutionLagMilliSec": {
                    "type": "number",
                    "default": 128,
                    "markdownDescription": "Millisecond delay between each code execution. Helps with race condition when sending text to IPython `stdin` shell."
                },
                "ipython.RunCodeBlockMethod": {
                    "type": "string",
                    "enum": [
                        "%load",
                        "%run -i"
                    ],
                    "default": "%run -i",
                    "markdownDescription": "Write code block (section, multi-selections) to `{workFolder}/code.py`, then execute using `%run -i or %load code.py`. NOTE: open `code.py` to see exact code executed."
                },
                "ipython.RunArguments": {
                    "type": "string",
                    "default": "-t",
                    "markdownDescription": "Run argument list equivalent to `%run run-args file.py`. More detail in [`%run` documentation](https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-run)"
                },
                "ipython.CommandLineArguments": {
                    "type": "string",
                    "default": "",
                    "markdownDescription": "Command line input (CLI) argument list equivalent to `python file.py cli-args`"
                }
            }
        },
        "commands": [
            {
                "category": "IPython",
                "command": "ipython.moveToSectionTagAbove",
                "title": "Move Cursor to Section Tag Above"
            },
            {
                "category": "IPython",
                "command": "ipython.moveToSectionTagBelow",
                "title": "Move Cursor to Section Tag Below"
            },
            {
                "category": "IPython",
                "command": "ipython.createTerminal",
                "title": "Create an IPython Terminal"
            },
            {
                "category": "IPython",
                "command": "ipython.runFile",
                "title": "Run File in an IPython Terminal"
            },
            {
                "category": "IPython",
                "command": "ipython.runFileWithArgs",
                "title": "Run File with Run Arguments"
            },
            {
                "category": "IPython",
                "command": "ipython.runFileWithCli",
                "title": "Run File with Command Line Arguments"
            },
            {
                "category": "IPython",
                "command": "ipython.runFileWithArgsCli",
                "title": "Run File with Run and Command Line Arguments"
            },
            {
                "category": "IPython",
                "command": "ipython.runSelections",
                "title": "Run Code Selection(s) or Line at each Cursor"
            },
            {
                "category": "IPython",
                "command": "ipython.runLineAndAdvance",
                "title": "Run Code on current line and advance to next line"
            },
            {
                "category": "IPython",
                "command": "ipython.runSection",
                "title": "Run Section Block of Code"
            },
            {
                "category": "IPython",
                "command": "ipython.naviRunSection",
                "shortTitle": "Run",
                "icon": "$(run)",
                "title": "Run Section From Navigation Tree."
            },
            {
                "category": "IPython",
                "command": "ipython.naviRunFile",
                "shortTitle": "Run File",
                "icon": "$(run-all)",
                "title": "Run File From Navigation Tree."
            },
            {
                "category": "IPython",
                "command": "ipython.naviJumpToSection",
                "shortTitle": "Jump",
                "icon": "$(arrow-circle-right)",
                "title": "Jump to ..."
            },
            {
                "category": "IPython",
                "command": "ipython.runSectionAndMoveToNext",
                "title": "Run Section and Move to Next Section"
            },
            {
                "category": "IPython",
                "command": "ipython.runToLine",
                "title": "Run From Line 1 to Current Line"
            },
            {
                "category": "IPython",
                "command": "ipython.runFromLine",
                "title": "Run From Current Line to Last Line"
            }
        ],
        "keybindings": [
            {
                "command": "ipython.moveToSectionTagAbove",
                "key": "alt+k",
                "when": "ipython.isUse && editorTextFocus && editorLangId == python"
            },
            {
                "command": "ipython.moveToSectionTagBelow",
                "key": "alt+j",
                "when": "ipython.isUse && editorTextFocus && editorLangId == python"
            },
            {
                "command": "ipython.createTerminal",
                "key": "ctrl+shift+i c",
                "when": "ipython.isUse"
            },
            {
                "command": "ipython.runFileWithCli",
                "key": "f5",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && editorLangId == python"
            },
            {
                "command": "ipython.runFileWithArgsCli",
                "key": "shift+f5",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && editorLangId == python"
            },
            {
                "command": "ipython.runSelections",
                "key": "f9",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && !findInputFocussed && !replaceInputFocussed && editorLangId == python"
            },
            {
                "command": "ipython.runSection",
                "key": "alt+enter",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && editorLangId == python"
            },
            {
                "command": "ipython.runSectionAndMoveToNext",
                "key": "shift+alt+enter",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && !notebookEditorFocused && editorLangId == python"
            },
            {
                "command": "ipython.runToLine",
                "key": "ctrl+shift+i l",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && !notebookEditorFocused && editorLangId == python"
            },
            {
                "command": "ipython.runFromLine",
                "key": "ctrl+shift+i shift+l",
                "when": "ipython.isUse && !inDebugMode && editorTextFocus && !notebookEditorFocused && editorLangId == python"
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "ipy-navigator",
                    "title": "Code Navigator",
                    "icon": "icons/sectioned_snake.svg"
                }
            ]
        },
        "views": {
            "ipy-navigator": [
                {
                    "id": "ipyNavigator",
                    "name": "Sections",
                    "icon": "media/sectioned_snake.svg",
                    "contextualTitle": "Navigation and Execution"
                }
            ]
        },
        "menus": {
            "view/item/context": [
                {
                    "command": "ipython.naviRunSection",
                    "when": "view == ipyNavigator && viewItem == runableSection",
                    "group": "inline"
                },
                {
                    "command": "ipython.naviRunFile",
                    "when": "view == ipyNavigator && viewItem == runableFile",
                    "group": "inline"
                },
                {
                    "command": "ipython.naviJumpToSection",
                    "when": "view == ipyNavigator",
                    "group": "inline"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.1",
        "@types/node": "^14.18.58",
        "@types/vscode": "^1.81.0",
        "@typescript-eslint/eslint-plugin": "^4.33.0",
        "@typescript-eslint/parser": "^4.33.0",
        "@vscode/test-electron": "^1.6.2",
        "eslint": "^7.32.0",
        "glob": "^7.2.3",
        "mocha": "^9.2.2",
        "typescript": "^4.9.5"
    }
}
